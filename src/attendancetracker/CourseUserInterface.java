/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package attendancetracker;


import java.awt.*;

/*******************************************************************************
 * The below class is Course Interface for the attendance tracking system which
 * is a GUI and holds all other components for course processing (add course,
 * delete course etc).It is a part of GUI layer in Logical architecture.
 * Design Pattern:Creator
 * @author rohitreddy
 *******************************************************************************/
public class CourseUserInterface extends javax.swing.JFrame {

    //Create object to handle the add delete modify function for student. 
      CourseDetailsApplicationLogic course;
      
   
    /**
     * Creates new form CourseParameters
     */
    public CourseUserInterface() {
        course = new CourseDetailsApplicationLogic();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     /**************************************************************************
     * The below method checks if all the mandatory fields required to add a
     * course record are filled or not.  
     * set the background of the field to RED Color.
     **************************************************************************/
     public int checkIfTextFieldsAreEmpty(){
 int statusMessage=0;
        //size of textfield is 100
        if(courseID.getText().equals("")){
            courseID.setBackground(Color.red);
            statusMessage =  99;
        }
        
        if(courseName.getText().equals("")){
            courseName.setBackground(Color.red);
            statusMessage = 99;
        }
        
     
            if (statusMessage == 99){
        statusBar.setText("Mandatory Fileds Required.");
        return statusMessage;
        }
        return 1;
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        homePage = new javax.swing.JButton();
        addCourseButton = new javax.swing.JButton();
        deleteCourseButton = new javax.swing.JButton();
        modifyCourseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        courseID = new javax.swing.JTextField();
        courseName = new javax.swing.JTextField();
        creditHours = new javax.swing.JTextField();
        statusBar = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 205));
        jPanel1.setEnabled(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(810, 520));

        homePage.setText("Back to Home Page");
        homePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageActionPerformed(evt);
            }
        });

        addCourseButton.setText("Add");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        deleteCourseButton.setText("Delete ");
        deleteCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCourseButtonActionPerformed(evt);
            }
        });

        modifyCourseButton.setText("Modify ");
        modifyCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyCourseButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("* Course ID");

        jLabel3.setText("* Course Name");

        jLabel5.setText(" Credit Hours");

        courseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseNameActionPerformed(evt);
            }
        });

        creditHours.setBackground(new java.awt.Color(255, 255, 102));
        creditHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditHoursActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Course Page");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(268, 268, 268)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addComponent(homePage)
                .addGap(50, 50, 50))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(377, 377, 377))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(addCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(deleteCourseButton)
                        .addGap(33, 33, 33)
                        .addComponent(modifyCourseButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(courseName, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                            .addComponent(courseID)
                            .addComponent(creditHours))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(homePage)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(courseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3))
                    .addComponent(courseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(creditHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseButton)
                    .addComponent(deleteCourseButton)
                    .addComponent(modifyCourseButton))
                .addGap(45, 45, 45))
        );

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.LINE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageActionPerformed
        this.setVisible(false);
        HomePage mainScr = new HomePage();
        mainScr.setVisible(true);
    }//GEN-LAST:event_homePageActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        //Fill the table.
     
    }//GEN-LAST:event_formWindowActivated

    private void creditHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditHoursActionPerformed

       // TODO add your handling code here:
    }//GEN-LAST:event_creditHoursActionPerformed
    /***************************************************************************
     * When ADD course button is pressed all the fields entered are sent for to
     * Domain Layer for processing with the help of controller object.
     **************************************************************************/
    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        
        
        
        if(checkIfTextFieldsAreEmpty()==1)
        {
        
        CourseParameters course = new CourseParameters(); 
        course.courseNumber      = courseID.getText();
        course.courseName    = courseName.getText();
        course.creditHours   = creditHours.getText();
      
        
        CourseDetailsApplicationLogic courseProc = new CourseDetailsApplicationLogic();
        String msg = courseProc.addCourse(course);
        statusBar.setText(msg); 
        refreshTextFieldsToDefault();
        }
    }//GEN-LAST:event_addCourseButtonActionPerformed

   /***************************************************************************
     *Deletes the entered course record.
     **************************************************************************/
    private void deleteCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCourseButtonActionPerformed
          String str;
		Controller con=new Controller();
        str = new String();
        
        
         if(checkIfTextFieldsAreEmpty()==1)
        {
		
		 CourseParameters course = new CourseParameters();
        con.courseID      = courseID.getText();
        con.courseName    = courseName.getText();
        con.creditHours   = creditHours.getText();
       		
        CourseDetailsApplicationLogic courseProc = new CourseDetailsApplicationLogic();
        str = courseProc.deleteCourse(con);
        statusBar.setText(str);
        refreshTextFieldsToDefault();
        }
    }//GEN-LAST:event_deleteCourseButtonActionPerformed

    
    /**************************************************************************
     *Modifies the course details.
     **************************************************************************/
    private void modifyCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyCourseButtonActionPerformed
        String str;
        str = new String();
         if(checkIfTextFieldsAreEmpty()==1)
        {
        CourseDetailsApplicationLogic courseProc = new CourseDetailsApplicationLogic();
        
        CourseParameters courseClicked = new CourseParameters();
        courseClicked.courseNumber      = courseID.getText();
        courseClicked.courseName    = courseName.getText();
        courseClicked.creditHours   = creditHours.getText();
        
        str = courseProc.modifyCourse( courseClicked);
        statusBar.setText(str);
        refreshTextFieldsToDefault();
        }
    }//GEN-LAST:event_modifyCourseButtonActionPerformed

    private void courseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseNameActionPerformed

    
    
    /***************************************************************************
     * Method used to refresh all the text fields.
     **************************************************************************/
    public void refreshTextFieldsToDefault(){
        courseID.setText("");
        courseName.setText("");
        creditHours.setText("");
     

    }
    
    /**************************************************************************/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseUserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseUserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseUserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseUserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseUserInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourseButton;
    private javax.swing.JTextField courseID;
    private javax.swing.JTextField courseName;
    private javax.swing.JTextField creditHours;
    private javax.swing.JButton deleteCourseButton;
    private javax.swing.JButton homePage;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifyCourseButton;
    private javax.swing.JLabel statusBar;
    // End of variables declaration//GEN-END:variables
}
